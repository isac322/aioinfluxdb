name: CI
on: pull_request

env:
  PY_VER: 3.8
  INFLUXDB_ADMIN_TOKEN: DUMMYTOKEN

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      influxdb:
        image: influxdb:2.1-alpine
        env:
          DOCKER_INFLUXDB_INIT_USERNAME: test
          DOCKER_INFLUXDB_INIT_PASSWORD: test_password1
          DOCKER_INFLUXDB_INIT_ORG: test
          DOCKER_INFLUXDB_INIT_BUCKET: test
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${{ env.INFLUXDB_ADMIN_TOKEN }}
          DOCKER_INFLUXDB_INIT_MODE: setup
        ports:
          - "8086:8086"
    strategy:
      matrix:
        python_version: [ "3.7" ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/poetry
            ~/.cache/pip
            poetry.lock
          key: ${{ runner.os }}-${{ matrix.python_version }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python_version }}-pip-
      - name: test cache
        run: |
          ls -ahl .
          ls -ahl ~/.cache
          ls -ahl ~/.cache/pip
      - uses: abatilo/actions-poetry@v2.1.4
      - name: Install dependencies
        run: |
          poetry install --no-root --remove-untracked
      - name: Run test
        run: |
          ./wait-for-it.sh localhost:8086
          poetry run pytest --cov aioinfluxdb --cov-config pyproject.toml --cov-report 'xml:./coverage.xml' ./tests
        env:
          INFLUXDB_HOST: localhost
          INFLUXDB_ADMIN_TOKEN: ${{ env.INFLUXDB_ADMIN_TOKEN }}
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PY_VER }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/poetry
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: abatilo/actions-poetry@v2.1.4
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --no-root
      - name: Run black
        run: black aioinfluxdb --check
